/*! @joeattardi/emoji-button v4.6.2 | MIT License | github.com/joeattardi/emoji-button */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).EmojiButton={})}(this,(function(t){"use strict";function e(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function n(t){return"string"==typeof t?document.querySelector(t):t||null}const o=()=>{try{return document.execCommand("copy")}catch(t){return!1}};class i{constructor(t){this.options=t,this._trigger=n(t.trigger),this._emojiData={},this._recentEmojis=[],this._isVisible=!1,this._isTouch=!1,this._emojisPerRow=8,this._emojiSize=32,this._events={}}on(t,e){this._events[t]=this._events[t]||[],this._events[t].push(e)}off(t,e){this._events[t]&&(this._events[t]=this._events[t].filter((t=>t!==e)))}_emit(t,...e){this._events[t]&&this._events[t].forEach((n=>n(...e)))}togglePicker(t){this._isVisible?this.hidePicker():this.showPicker(t)}showPicker(t){this._emit("picker:show",t)}hidePicker(){this._emit("picker:hide")}destroy(){this._emit("picker:destroy")}setTheme(t){this.options.theme=t,this._emit("picker:theme",t)}}t.EmojiButton=i,Object.defineProperty(t,"__esModule",{value:!0})}));
